import com.thestrikingarts.domain.model.WorkoutConclusion;

CREATE TABLE IF NOT EXISTS `WorkoutResultTable` (
    `workoutResultId` INTEGER PRIMARY KEY,
    `workoutId` INTEGER NOT NULL,
    `workoutName` TEXT NOT NULL,
    `workoutConclusion` INTEGER AS WorkoutConclusion NOT NULL,
    `trainingDateEpochDay` INTEGER NOT NULL
);

CREATE INDEX IF NOT EXISTS `indexTrainingDateEpochDay`
ON `WorkoutResultTable` (`trainingDateEpochDay`);

insert:
INSERT OR IGNORE INTO `WorkoutResultTable`(
    `workoutId`, `workoutName`, `workoutConclusion`, `trainingDateEpochDay`
)
VALUES (:workoutId, :workoutName, :isWorkoutAborted, :trainingDateEpochDay);

update:
UPDATE `WorkoutResultTable`
    SET `workoutConclusion` = :workoutConclusion
WHERE `workoutResultId` = :id;

getLastSuccessfulWorkoutResult:
SELECT * FROM `WorkoutResultTable`
WHERE `workoutConclusion` = 1 -- 1 = Successful
ORDER BY `trainingDateEpochDay` DESC LIMIT 1;

getLastFailedWorkoutResult:
SELECT * FROM `WorkoutResultTable`
WHERE `workoutConclusion` = 2 -- 2 = Aborted(redeemed = false)
ORDER BY `trainingDateEpochDay` DESC LIMIT 1;

getWorkoutResultsByDate:
SELECT * FROM `WorkoutResultTable`
WHERE `trainingDateEpochDay` = :epochDay;

getWorkoutResultsInRange:
SELECT * FROM `WorkoutResultTable`
WHERE `trainingDateEpochDay` BETWEEN :fromEpochDate AND :toEpochDate;

affectedRows:
SELECT changes();

lastInsertedRowId:
SELECT last_insert_rowid();