import com.example.android.strikingarts.domain.model.WorkoutConclusion;

CREATE TABLE IF NOT EXISTS workout_result_table (
    workout_result_id INTEGER PRIMARY KEY AUTOINCREMENT,
    workout_id INTEGER NOT NULL,
    workout_name TEXT NOT NULL,
    workout_conclusion INTEGER AS WorkoutConclusion NOT NULL,
    training_date_epoch_day INTEGER NOT NULL
);

CREATE INDEX IF NOT EXISTS index_training_date_epoch_day
ON workout_result_table (training_date_epoch_day);

insert:
INSERT OR IGNORE INTO workout_result_table(
    workout_id, workout_name, workout_conclusion, training_date_epoch_day
)
VALUES (:workoutId, :workoutName, :isWorkoutAborted, :trainingDateEpochDay);

update:
UPDATE workout_result_table
    SET workout_conclusion = :workoutConclusion
WHERE workout_result_id = :id;

getLastSuccessfulWorkoutResult:
SELECT * FROM workout_result_table
WHERE workout_conclusion = 1
ORDER BY training_date_epoch_day DESC LIMIT 1;

getLastFailedWorkoutResult:
SELECT * FROM workout_result_table
WHERE workout_conclusion = 2 -- 2 = Aborted(redeemed = false)
ORDER BY training_date_epoch_day DESC LIMIT 1;

getWorkoutResultsByDate:
SELECT * FROM workout_result_table
WHERE training_date_epoch_day = :epochDay;

getWorkoutResultsInRange:
SELECT * FROM workout_result_table
WHERE training_date_epoch_day BETWEEN :fromEpochDate AND :toEpochDate;

affectedRows:
SELECT changes();

lastInsertedRowId:
SELECT last_insert_rowid();