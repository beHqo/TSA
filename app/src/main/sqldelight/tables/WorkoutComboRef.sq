CREATE TABLE IF NOT EXISTS `WorkoutComboRefTable`(
    `workoutComboId` INTEGER PRIMARY KEY,
    `workoutId` INTEGER NOT NULL,
    `comboId` INTEGER NOT NULL,
        FOREIGN KEY (`workoutId`) REFERENCES `WorkoutTable`(`workoutId`)
            ON UPDATE CASCADE
            ON DELETE CASCADE ,
        FOREIGN KEY (`comboId`) REFERENCES `ComboTable`(`comboId`)
            ON UPDATE CASCADE
            ON DELETE RESTRICT
);

CREATE INDEX `indexWorkoutComboRefWorkoutId`
ON `WorkoutComboRefTable` (`workoutId`);
CREATE INDEX `indexWorkoutComboRefComboId`
ON `WorkoutComboRefTable` (`comboId`);

getComboIds:
SELECT `comboId`
FROM `WorkoutComboRefTable`
WHERE `workoutId` = :workoutId;

insert:
INSERT OR IGNORE INTO `WorkoutComboRefTable`(`workoutId`, `comboId`)
VALUES (:workoutId, :comboId);

delete:
DELETE FROM `WorkoutComboRefTable`
WHERE `workoutId` = :id;

lastInsertedRowId:
SELECT last_insert_rowid();