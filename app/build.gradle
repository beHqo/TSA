plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "com.google.protobuf" version "0.8.17"
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.android.strikingarts"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        targetSdkVersion 32
        minSdkVersion 21
    }

    buildTypes {
        release {
//            minifyEnabled false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
//        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_ver
//        kotlinCompilerVersion kotlin_ver
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    hilt {
        enableAggregatingTask = true
    }
    compileSdkVersion 32
    buildToolsVersion '33.0.0'
    namespace 'com.example.android.strikingarts'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=${buildDir}/composeReports"
        ]
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.activity:activity-compose:1.5.1'

    // Compose
    implementation "androidx.compose.ui:ui:$compose_ver"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ver"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ver"
    implementation "androidx.compose.material:material:$compose_ver"
      // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_ver"
      // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_ver"
    implementation "androidx.compose.material:material-icons-extended:$compose_ver"
      // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$compose_ver"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ver"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_ver"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ver"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ver"

    // Room
    implementation "androidx.room:room-runtime:$room_ver"
    kapt "androidx.room:room-compiler:$room_ver"
    implementation "androidx.room:room-ktx:$room_ver"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_ver"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_ver"
    kapt "com.google.dagger:hilt-compiler:$hilt_ver"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Navigation
    implementation "androidx.navigation:navigation-compose:$navigation_ver"

    // Proto DataStore
    implementation "androidx.datastore:datastore:$datastore_ver"
    implementation  "com.google.protobuf:protobuf-javalite:3.18.0"

    // ColorPicker
    implementation "com.github.skydoves:colorpicker-compose:1.0.0"

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
      // Compose UI Tests
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ver"
    testImplementation "androidx.room:room-testing:$room_ver"
        // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_ver"
    androidTestAnnotationProcessor "com.google.dagger:hilt-compiler:$hilt_ver"
        // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_ver"
    testAnnotationProcessor "com.google.dagger:hilt-compiler:$hilt_ver"

}

protobuf {
    // Configures the Protobuf compilation and the protoc executable
    protoc {
        // Downloads from the repositories
        artifact = "com.google.protobuf:protoc:3.14.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // Configures the task output type
                java {
                    // Java Lite has smaller code size and is recommended for Android
                    option 'lite'
                }
            }
        }
    }
}
